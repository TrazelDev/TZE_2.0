<?xml version="1.0" encoding="utf-8"?>
<Project DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <ItemGroup Label="ProjectConfigurations">
    <ProjectConfiguration Include="Debug|x64">
      <Configuration>Debug</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Release|x64">
      <Configuration>Release</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
    <ProjectConfiguration Include="Client|x64">
      <Configuration>Client</Configuration>
      <Platform>x64</Platform>
    </ProjectConfiguration>
  </ItemGroup>
  <PropertyGroup Label="Globals">
    <ProjectGuid>{9B2E240D-0745-22A3-50BC-ADC4BC11F32A}</ProjectGuid>
    <IgnoreWarnCompileDuplicatedFilename>true</IgnoreWarnCompileDuplicatedFilename>
    <Keyword>Win32Proj</Keyword>
    <RootNamespace>TRAZEL_ENGINE_2.0</RootNamespace>
    <WindowsTargetPlatformVersion>10.0</WindowsTargetPlatformVersion>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.Default.props" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Client|x64'" Label="Configuration">
    <ConfigurationType>DynamicLibrary</ConfigurationType>
    <UseDebugLibraries>true</UseDebugLibraries>
    <CharacterSet>Unicode</CharacterSet>
    <PlatformToolset>v143</PlatformToolset>
  </PropertyGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.props" />
  <ImportGroup Label="ExtensionSettings">
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <ImportGroup Label="PropertySheets" Condition="'$(Configuration)|$(Platform)'=='Client|x64'">
    <Import Project="$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props" Condition="exists('$(UserRootDir)\Microsoft.Cpp.$(Platform).user.props')" Label="LocalAppDataPlatform" />
  </ImportGroup>
  <PropertyGroup Label="UserMacros" />
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <LinkIncremental>true</LinkIncremental>
    <OutDir>..\bin\Debug-windows-x86_64\TRAZEL_ENGINE_2.0\</OutDir>
    <IntDir>..\bin-int\Debug-windows-x86_64\TRAZEL_ENGINE_2.0\</IntDir>
    <TargetName>TRAZEL_ENGINE_2.0</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Release-windows-x86_64\TRAZEL_ENGINE_2.0\</OutDir>
    <IntDir>..\bin-int\Release-windows-x86_64\TRAZEL_ENGINE_2.0\</IntDir>
    <TargetName>TRAZEL_ENGINE_2.0</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)|$(Platform)'=='Client|x64'">
    <LinkIncremental>false</LinkIncremental>
    <OutDir>..\bin\Client-windows-x86_64\TRAZEL_ENGINE_2.0\</OutDir>
    <IntDir>..\bin-int\Client-windows-x86_64\TRAZEL_ENGINE_2.0\</IntDir>
    <TargetName>TRAZEL_ENGINE_2.0</TargetName>
    <TargetExt>.dll</TargetExt>
  </PropertyGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Debug|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <PreprocessorDefinitions>TZE_PLATFORM_WINDOWS;TZE_BUILD_DLL;DEBUG_MODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src\TZE;..\third_party_extentions;..\third_party_extentions\glfw\include;..\third_party_extentions\spdlog\include\spdlog;..\third_party_extentions\spdlog\include;..\third_party_extentions\vulkan_sdk\Include;..\third_party_extentions\glm-master;..\third_party_extentions\glm-master\glm\detail;..\third_party_extentions\glm-master\glm;..\third_party_extentions\glm-master\glm\gtc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <DebugInformationFormat>EditAndContinue</DebugInformationFormat>
      <Optimization>Disabled</Optimization>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <GenerateDebugInformation>true</GenerateDebugInformation>
      <AdditionalDependencies>..\third_party_extentions\glfw\lib-vc2022\glfw3.lib;..\third_party_extentions\vulkan_sdk\Lib\vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Debug-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST third_party_extentions\glfw\lib-vc2022\glfw3.lib\ (xcopy /Q /E /Y /I third_party_extentions\glfw\lib-vc2022\glfw3.lib bin\Debug-windows-x86_64\Clientgdgd &gt; nul) ELSE (xcopy /Q /Y /I third_party_extentions\glfw\lib-vc2022\glfw3.lib bin\Debug-windows-x86_64\Clientgdgd &gt; nul)
IF EXIST ..\bin\Debug-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll\ (xcopy /Q /E /Y /I ..\bin\Debug-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll ..\bin\Debug-windows-x86_64\Client &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Debug-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll ..\bin\Debug-windows-x86_64\Client &gt; nul)
$(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\glslc.exe $(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\shader.frag -o $(ProjectDir)..\Client\fragment.spv
$(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\glslc.exe $(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\shader.vert -o$(ProjectDir)..\Client\vertex.spv</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Release|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <PreprocessorDefinitions>TZE_PLATFORM_WINDOWS;TZE_BUILD_DLL;REALSE_MODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src\TZE;..\third_party_extentions;..\third_party_extentions\glfw\include;..\third_party_extentions\spdlog\include\spdlog;..\third_party_extentions\spdlog\include;..\third_party_extentions\vulkan_sdk\Include;..\third_party_extentions\glm-master;..\third_party_extentions\glm-master\glm\detail;..\third_party_extentions\glm-master\glm;..\third_party_extentions\glm-master\glm\gtc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>..\third_party_extentions\glfw\lib-vc2022\glfw3.lib;..\third_party_extentions\vulkan_sdk\Lib\vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Release-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST third_party_extentions\glfw\lib-vc2022\glfw3.lib\ (xcopy /Q /E /Y /I third_party_extentions\glfw\lib-vc2022\glfw3.lib bin\Release-windows-x86_64\Clientgdgd &gt; nul) ELSE (xcopy /Q /Y /I third_party_extentions\glfw\lib-vc2022\glfw3.lib bin\Release-windows-x86_64\Clientgdgd &gt; nul)
IF EXIST ..\bin\Release-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll\ (xcopy /Q /E /Y /I ..\bin\Release-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll ..\bin\Release-windows-x86_64\Client &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Release-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll ..\bin\Release-windows-x86_64\Client &gt; nul)
$(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\glslc.exe $(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\shader.frag -o $(ProjectDir)..\Client\fragment.spv
$(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\glslc.exe $(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\shader.vert -o$(ProjectDir)..\Client\vertex.spv</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemDefinitionGroup Condition="'$(Configuration)|$(Platform)'=='Client|x64'">
    <ClCompile>
      <PrecompiledHeader>Use</PrecompiledHeader>
      <PrecompiledHeaderFile>pch.h</PrecompiledHeaderFile>
      <WarningLevel>Level3</WarningLevel>
      <BasicRuntimeChecks>Default</BasicRuntimeChecks>
      <PreprocessorDefinitions>TZE_PLATFORM_WINDOWS;TZE_BUILD_DLL;CLIENT_MODE;%(PreprocessorDefinitions)</PreprocessorDefinitions>
      <AdditionalIncludeDirectories>src\TZE;..\third_party_extentions;..\third_party_extentions\glfw\include;..\third_party_extentions\spdlog\include\spdlog;..\third_party_extentions\spdlog\include;..\third_party_extentions\vulkan_sdk\Include;..\third_party_extentions\glm-master;..\third_party_extentions\glm-master\glm\detail;..\third_party_extentions\glm-master\glm;..\third_party_extentions\glm-master\glm\gtc;%(AdditionalIncludeDirectories)</AdditionalIncludeDirectories>
      <Optimization>Full</Optimization>
      <FunctionLevelLinking>true</FunctionLevelLinking>
      <IntrinsicFunctions>true</IntrinsicFunctions>
      <MinimalRebuild>false</MinimalRebuild>
      <StringPooling>true</StringPooling>
      <RuntimeLibrary>MultiThreadedDebugDLL</RuntimeLibrary>
      <LanguageStandard>stdcpplatest</LanguageStandard>
    </ClCompile>
    <Link>
      <SubSystem>Windows</SubSystem>
      <EnableCOMDATFolding>true</EnableCOMDATFolding>
      <OptimizeReferences>true</OptimizeReferences>
      <AdditionalDependencies>..\third_party_extentions\glfw\lib-vc2022\glfw3.lib;..\third_party_extentions\vulkan_sdk\Lib\vulkan-1.lib;%(AdditionalDependencies)</AdditionalDependencies>
      <ImportLibrary>..\bin\Client-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.lib</ImportLibrary>
    </Link>
    <PostBuildEvent>
      <Command>IF EXIST third_party_extentions\glfw\lib-vc2022\glfw3.lib\ (xcopy /Q /E /Y /I third_party_extentions\glfw\lib-vc2022\glfw3.lib bin\Client-windows-x86_64\Clientgdgd &gt; nul) ELSE (xcopy /Q /Y /I third_party_extentions\glfw\lib-vc2022\glfw3.lib bin\Client-windows-x86_64\Clientgdgd &gt; nul)
IF EXIST ..\bin\Client-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll\ (xcopy /Q /E /Y /I ..\bin\Client-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll ..\bin\Client-windows-x86_64\Client &gt; nul) ELSE (xcopy /Q /Y /I ..\bin\Client-windows-x86_64\TRAZEL_ENGINE_2.0\TRAZEL_ENGINE_2.0.dll ..\bin\Client-windows-x86_64\Client &gt; nul)
$(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\glslc.exe $(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\shader.frag -o $(ProjectDir)..\Client\fragment.spv
$(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\glslc.exe $(ProjectDir)src\TZE\layers\Vulkan\pipeline\Shaders\shader.vert -o$(ProjectDir)..\Client\vertex.spv</Command>
    </PostBuildEvent>
  </ItemDefinitionGroup>
  <ItemGroup>
    <ClInclude Include="src\TZE\layers\Vulkan\Renderer.h" />
    <ClInclude Include="src\TZE.h" />
    <ClInclude Include="src\TZE\App.h" />
    <ClInclude Include="src\TZE\Core.h" />
    <ClInclude Include="src\TZE\EntryPoint.h" />
    <ClInclude Include="src\TZE\layers\Layer.h" />
    <ClInclude Include="src\TZE\layers\Vulkan\Commands.h" />
    <ClInclude Include="src\TZE\layers\Vulkan\Instance.h" />
    <ClInclude Include="src\TZE\layers\Vulkan\Objects\GameObj.h" />
    <ClInclude Include="src\TZE\layers\Vulkan\Objects\Model.h" />
    <ClInclude Include="src\TZE\layers\Vulkan\Swapchain.h" />
    <ClInclude Include="src\TZE\layers\Vulkan\pipeline\Pipeline.h" />
    <ClInclude Include="src\TZE\layers\Vulkan\vk_logging\vkLogging.h" />
    <ClInclude Include="src\TZE\layers\Window\Window.h" />
    <ClInclude Include="src\TZE\logging\Log.h" />
    <ClInclude Include="src\TZE\pch.h" />
  </ItemGroup>
  <ItemGroup>
    <ClCompile Include="src\TZE\layers\Vulkan\Renderer.cpp" />
    <ClCompile Include="src\TZE\App.cpp" />
    <ClCompile Include="src\TZE\layers\Vulkan\Commands.cpp" />
    <ClCompile Include="src\TZE\layers\Vulkan\Instance.cpp" />
    <ClCompile Include="src\TZE\layers\Vulkan\Objects\GameObj.cpp" />
    <ClCompile Include="src\TZE\layers\Vulkan\Objects\Model.cpp" />
    <ClCompile Include="src\TZE\layers\Vulkan\Swapchain.cpp" />
    <ClCompile Include="src\TZE\layers\Vulkan\pipeline\Pipeline.cpp" />
    <ClCompile Include="src\TZE\layers\Vulkan\vk_logging\vkLogging.cpp" />
    <ClCompile Include="src\TZE\layers\Window\Window.cpp" />
    <ClCompile Include="src\TZE\logging\Log.cpp" />
    <ClCompile Include="src\TZE\pch.cpp">
      <PrecompiledHeader>Create</PrecompiledHeader>
    </ClCompile>
  </ItemGroup>
  <Import Project="$(VCTargetsPath)\Microsoft.Cpp.targets" />
  <ImportGroup Label="ExtensionTargets">
  </ImportGroup>
</Project>